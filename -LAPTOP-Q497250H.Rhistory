ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes
)
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
theme_gdocs()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_colorblind()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_manual(c("red", "yellow"))
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_canva()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_viridis_d()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_viridis_c()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_viridis_d()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_viridis_d() +
theme_fivethirtyeight()
df %>% ggplot(aes(waiting, eruptions, color = eruptions > 3)) +
geom_jitter(shape = 1, show.legend = F) +
stat_ellipse(show.legend = F) +
labs(x = "Waiting Time (min)",
y = "Eruption Duration (min)") +
scale_color_viridis_d() +
theme_tufte()
knitr::opts_chunk$set(echo = F)
pacman::p_load(pacman, tidyverse, rio, ggpubr, corrplot, janitor, broom, broom.mixed, lme4,
ggdark,  #
RColorBrewer,  #
httr, XML,  # for Wikipedia scraping
ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes
)
theme_set(theme_bw())
library(emmeans)
noise.lm <- lm(noise ~ size * type * side, data = auto.noise)
# Interaction plot of predictions
emmip(noise.lm, type ~ size | side)
# Confidence intervals
plot(emmeans(noise.lm, ~ size | side*type))
emmeans(noise.lm)
emmeans(noise.lm, specs = "size")
emmeans(noise.lm, specs = c("size", "side"))
emmeans(noise.lm, specs = c("size", "side", "type"))
vol <- volcano
glimpse(vol)
knitr::opts_chunk$set(echo = F)
pacman::p_load(pacman, tidyverse, rio, ggpubr, corrplot, janitor, broom, broom.mixed, lme4,
ggdark,  #
RColorBrewer,  #
httr, XML,  # for Wikipedia scraping
ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes
)
theme_set(theme_bw())
glimpse(vol)
library(emmeans)
noise.lm <- lm(noise ~ size * type * side, data = auto.noise)
# Interaction plot of predictions
emmip(noise.lm, type ~ size | side)
# Confidence intervals
plot(emmeans(noise.lm, ~ size | side*type))
emmeans(noise.lm, specs = c("size", "side", "type"))
test <- ref_grid(noise.lm)
View(test)
test@grid
knitr::opts_chunk$set(echo = F)
pacman::p_load(pacman, tidyverse, rio, ggpubr, corrplot, janitor, broom, broom.mixed, lme4,
ggdark,  #
RColorBrewer,  #
httr, XML,  # for Wikipedia scraping
ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes
)
theme_set(theme_bw())
tt <- tt_load("2021-02-23")
readme(tt)
tt1 <- tt$earn
tt2 <- tt$employed
glimpse(tt1)
glimpse(tt2)
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_bar()
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col()
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col() +
labs(y = "")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col() +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = "red") +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal(n = 4)) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal(4, "Accent")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal(4, Accent)) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal(4, name = Accent)) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(aes(fill = brewer.pal(4, name = Accent))) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race)) +
geom_col(fill = brewer.pal("Greens")) +
labs(y = "", x = "Median Weekly Earnings")
fill
tt1 %>% ggplot(aes(median_weekly_earn, race, color = race)) +
geom_col(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, color = race)) +
geom_col(color = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col(frill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_color_discrete(fill = brewer.pal(4, "Greens"))
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_color_discrete(brewer.pal(4, "Greens"))
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_color_discrete(brewer.pal(4, "Greens"))
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_color_discrete(brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_color_manual(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_manual(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_manual(brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_manual(fill = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_manual(pal = brewer.pal(4, "Greens")) +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_brewer("Greems") +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_brewer("Greens") +
labs(y = "", x = "Median Weekly Earnings")
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
labs(y = "", x = "Median Weekly Earnings")
View(tt2)
View(tt1)
tt1 %>% ggplot(aes(median_weekly_earn, race, fill = race)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
labs(y = "", x = "Median Weekly Earnings") +
facet_wrap(~sex)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous() +
facet_wrap(~race)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Greens") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race) +
theme(legend.position = NA)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race) +
theme(legend.position = NULL)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race) +
theme(legend.position = element_blank())
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race) +
theme(legend.position = "none")
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race, scales = "free") +
theme(legend.position = "none")
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~race) +
theme(legend.position = "none")
names(tt2)
tt2 %>% ggplot(aes(industry)) + geom_bar()
tt2 %>% ggplot(aes(industry)) + geom_bar() + coord_flip
tt2 %>% ggplot(aes(industry)) +
geom_bar() +
coord_flip()
tt2 %>% ggplot(aes(industry)) +
geom_bar(prop) +
coord_flip()
tt2 %>% ggplot(aes(industry)) +
geom_bar(stat = "prop") +
coord_flip()
tt2 %>% ggplot(aes(industry)) +
geom_bar(stat = prop) +
coord_flip()
tt2 %>% ggplot(aes(industry)) +
geom_bar() +
coord_flip()
tt2 %>% ggplot(aes(industry)) +
geom_bar() +
coord_flip() +
facet_wrap(~ race_gender)
tt2 %>% ggplot(aes(industry)) +
geom_bar(position = "fill") +
coord_flip() +
facet_wrap(~ race_gender)
tt2 %>% ggplot(aes(industry), stat = "prop") +
geom_bar() +
coord_flip() +
facet_wrap(~ race_gender)
tt2 %>% ggplot(aes(industry, ..prop..), stat = "prop") +
geom_col() +
coord_flip() +
facet_wrap(~ race_gender)
tt2 %>% ggplot(aes(industry, ""), stat = "prop") +
geom_col() +
coord_flip() +
facet_wrap(~ race_gender)
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_cleveland()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_calc()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_economist()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_economist_white()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_wsj()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_transparent()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_solarized()
tt1 %>% ggplot(aes(median_weekly_earn, sex, fill = sex)) +
geom_col() +
scale_fill_brewer(palette = "Accent") +
labs(y = "", x = "Median Weekly Earnings") +
scale_x_continuous(labels=scales::dollar_format()) +
facet_wrap(~ race) +
theme(legend.position = "none") +
theme_light()
knitr::opts_chunk$set(echo = F)
pacman::p_load(pacman, tidyverse, rio, ggpubr, corrplot, janitor, broom, broom.mixed, lme4,
ggdark,  #
RColorBrewer,  #
httr, XML,  # for Wikipedia scraping
ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes
)
theme_set(theme_bw())
df <- tibble(x = seq(0, 10, by = 0.5),
y = seq(0, 10, by = 0.5))
df %>% ggplot(aes(x, y)) + geom_point()
df <- tibble(x = seq(0, 10, by = 0.5),
y = c(1, 2))
df <- tibble(x = seq(0, 10, by = 0.5),
y = 5)
df %>% ggplot(aes(x, y)) + geom_point()
df <- tibble(x = seq(0, 10, by = 0.5),
y = (1:20))
df <- tibble(x = seq(0, 10, by = 0.5),
y = (1:21))
df %>% ggplot(aes(x, y)) + geom_point()
library(plotrix)
draw.circle(x,y,radius,nv=100,border=NULL,col=NA,lty=1,density=NULL,
angle=45,lwd=1)
draw.circle(1, 1, 1,nv=100,border=NULL,col=NA,lty=1,density=NULL,
angle=45,lwd=1)
plot.new()
draw.circle(1, 1, 1,nv=100,border=NULL,col=NA,lty=1,density=NULL,
angle=45,lwd=1)
draw.circle(1, 1, pi,nv=100,border=NULL,col=NA,lty=1,density=NULL,
angle=45,lwd=1)
df2 <- tibble(x = c(1, 1, 2, 2),
y = c(1, 2, 1, 2))
df2 %>% ggplot(aes(x, y)) + geom_point()
df2 %>% ggplot(aes(x, y)) + geom_point()
t  <-  [0:2 * pi]
t  <-  c(0:2 * pi)
df3 <- tibble(x = c(16 * sin(t)^3),
y = c(13 * cos(t) - 5 * cos(2 * t) - 2 * cos(3 * t) - cos(4 * t)))
df3 %>% ggplot(aes(x, y)) + geom_point()
View(df3)
dat <- data.frame(t = seq(0, 2*pi, by = 0.01))
x <-  function(t) 16 * sin(t)^3
y <- function(t) 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
dat$y <- y(dat$t)
dat$x <- x(dat$t)
heart <- ggplot(dat, aes(x,y)) +
geom_polygon(fill = "red", col = "firebrick", alpha = 0.9) +
theme_classic()
heart
df2 <- tibble(x = c(1, 1, 2, 2),
y = c(1, 2, 1, 2),
lab = c("A", "B", "C", "D"),
col = c("blue", "brown", "cyan", "darkgreen"))
df2 %>% ggplot(aes(x, y, color = col)) + geom_point()
df2 %>% ggplot(aes(x, y, color = col)) + geom_point() + geom_text(lab)
df2 %>% ggplot(aes(x, y, color = col)) + geom_point() + geom_text(label = lab)
df2 %>% ggplot(aes(x, y, color = col)) + geom_point() + geom_text(label = "lab")
View(df2)
df2 %>% ggplot(aes(x, y, color = col)) + geom_point() + geom_text(label = "lab", show.legend = F)
df2 %>% ggplot(aes(x, y, color = col)) + geom_point() + geom_text(aes(label = lab), show.legend = F)
df2 %>% ggplot(aes(x, y, color = col)) + geom_text(aes(label = lab), show.legend = F)
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F)
df2 %>% ggplot(aes(x, y), group = col) + geom_text(aes(label = lab), show.legend = F)
df2 %>% ggplot(aes(x, y), group = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(group = col)
df2 %>% ggplot(aes(x, y), group = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(group = col)
df2 %>% ggplot(aes(x, y), group = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(values = col)
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(values = col)
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(values = col) +
theme_void()
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(values = df2$col) +
theme_void()
df2 %>% ggplot(aes(x, y), color = df2$col) + geom_text(aes(label = lab), show.legend = F) +
scale_color_manual(values = df2$col) +
theme_void()
df2 %>% ggplot(aes(x, y), color = df2$col) + geom_text(aes(label = lab), show.legend = F) +
scale_colour_identity() +
theme_void()
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F) +
scale_colour_identity() +
theme_void()
df2 %>% ggplot(aes(x, y), color = col) + geom_text(aes(label = lab), show.legend = F)
df2 %>% ggplot(aes(x, y, color = col)) + geom_text(aes(label = lab), show.legend = F) +
scale_colour_identity() +
theme_void()
df2 %>% ggplot(aes(x, y, color = col)) + geom_text(aes(label = lab), show.legend = F) +
scale_colour_identity()
devtools::install_github("jespermaag/gganatogram")
knitr::opts_chunk$set(echo = F)
pacman::p_load(pacman, tidyverse, rio, ggpubr, corrplot, janitor, broom, broom.mixed, lme4,
ggdark,  #
RColorBrewer,  #
httr, XML,  # for Wikipedia scraping
ggrepel,
plotly,
gt,  # tables
ggdark,  # dark theme
tidytuesdayR,
rstatix,
ggthemes,
plotrix
)
theme_set(theme_bw())
install.packages("rayshader")
