---
title: "March 2022: Trying Quarto"
format:
  html:
    theme: flatly
    toc: true
knit: crsp::knit_html_to_outputs
---

For March, I am going to try using a [Quarto](https://quarto.org/docs/get-started/hello/rstudio.html) document. It is similar to Rmarkdown, but I just found out about it and want to see how it differs.

```{r setup, include = FALSE}

knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE,
  fig.retina = 3,
  fig.path = here::here("exports", "March_2022", "/")
)

pacman::p_load(janitor, pacman, rio, skimr, here, conflicted,
               tidyverse, crsp, gt)

conflict_prefer("clean_names", "janitor")
conflict_prefer("filter", "dplyr")

theme_set(theme_bw(base_size = 15) + theme(legend.position = "bottom"))
```

# 20220301: Initial Quarto Setup and Testing

```{r}
#| label: test-plot
#| include: true
#| echo: true

data(mpg, package = "ggplot2")

mpg %>% 
  ggplot(aes(cty, hwy, color = cyl)) + 
  geom_jitter(shape = 21, 
              fill = "#1D4289", color = "#B1B3B3", alpha = 0.7, 
              size = 3) + 
  geom_smooth(method = "lm", color = "#C8102E", 
              lty = 2, size = 0.5) + 
  facet_wrap(~ drv)
  
```

# 20220302: Trying Challenge #1 of the [Unlocked](https://www.hp.com/us-en/workstations/industries/data-science/unlocked-challenge.html) [Challenge](https://github.com/Z-Unlocked/Unlocked_Challenge_1)

```{r data-import, include = FALSE}

p_load(rnaturalearth, rnaturalearthdata, maps, sp, sf, rgeos, biscale)

world <- ne_countries(returnclass = 'sf')

energy_use <- cs_import(here("data", "z_hp", "challenge-1", "energy_use_data_11-29-2021.csv")) 

energy_use %>% 
  group_by(year, item) %>% 
  summarize(mean(value))

energy_use %>% 
  group_by(item) %>% 
  summarize(mn = mean(value)) %>% 
  arrange(-mn)

e2 <- energy_use %>% 
  filter(item_code %in% c(6807, 6801, 6809, 6803)) %>% 
  mutate(type = case_when(str_detect(item, "as") ~ "Gas",
                         TRUE ~ item)) %>% 
  filter(year %in% c(1990, 2019)) %>% 
  rename(use_kilotonnes = value) %>% 
  select(area_code_iso3, area, type, item, year, use_kilotonnes) %>% 
  pivot_wider(names_from = year, values_from = use_kilotonnes) %>% 
  rowwise() %>% 
  mutate(pct_change = ((`2019` - `1990`) / `1990`) * 100)

e2 %>% pivot_longer(cols = pct_change)

e2 %>% count(type)

# browseURL("https://slu-opengis.github.io/biscale/articles/biscale.html")
```
